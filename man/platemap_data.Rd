% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/platemap_data.R
\name{platemap_data}
\alias{platemap_data}
\title{Data converted to appropriate format for \code{plot_platemap} function}
\usage{
platemap_data(plateformat, plate_data, data_flow, plate_letters)
}
\arguments{
\item{plateformat}{An integer which can be one of 96 or 384 or 1536}

\item{plate_data}{A dataframe with one column representing the data subtypes
of plate or a dataframe with three columns such as first column representing
the text characters used to label the y-axis, second column representing the
character used to label the x-axis of platemap, third column representing the
data subtypes.}

\item{data_flow}{A character that must be either down or across.
'down' representing data organized as columnwise as shown in
\code{data(colonyarea)}. 'across' representing data organized as rowwise. See
examples of this function.}

\item{plate_letters}{A character vector for labelling y-axis of platemap}
}
\value{
A dataframe with three columns such as rowvar representing the text
characters used to label the y-axis, columnvar representing the character
used to label the x-axis of platemap, colorvar representing the data subtypes.
If the \code{data_flow} is across, then this function converts it into 'down'.
}
\description{
Data converted to appropriate format for \code{plot_platemap} function
}
\examples{
# dataframe with one column is converted to three columns
plateformat <- 1536
down_data <- data.frame(data_subtypes = convert_384_to_1536_data(
                                                   colonyarea$data_subtypes),
                        stringsAsFactors = FALSE)
plate_letters <- c(LETTERS,
                   c(t(outer(LETTERS[1], LETTERS[1:6], paste, sep = ''))))
p_nrow <- plate_nrow(plateformat)
plate_letters <- plate_letters[1:p_nrow]
platemap_data(plateformat   = plateformat,
              plate_data    = down_data,
              data_flow     = 'down',
              plate_letters = plate_letters)

# convert data down to across
plateformat <- 384
n_col <- plate_ncol(plateformat)
n_row <- plate_nrow(plateformat)
across_data <- data.frame(stringsAsFactors = FALSE)
for(i in (n_row-1):0){
  for(j in 1:n_col){
    across_data <- do.call('rbind', list(across_data,
                                         (colonyarea[((j*n_row)-i),])))
  }
}

# convert dataframe with dataflow 'across' as input to 'down' format as output
across_data <- data.frame(data_subtypes = convert_384_to_1536_data(
                                                   across_data$data_subtypes),
                          stringsAsFactors = FALSE)
platemap_data(plateformat   = 1536,
              plate_data    = across_data,
              data_flow     = 'across',
              plate_letters = plate_letters)
}


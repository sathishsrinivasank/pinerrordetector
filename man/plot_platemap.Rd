% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_platemap.R
\name{plot_platemap}
\alias{plot_platemap}
\title{Platemap for a given data}
\usage{
plot_platemap(plateformat, plot_data, legend_txt_bg_col, las2 = 2, las3 = 0,
  cex_axis = 1.2, legend_pch = 21, symbol_size = rep(0.3, plateformat),
  legend_text_width = NULL, legend_ncol = 4, legend_posX = 0,
  legend_posY = -1, legend_symbol_size = 1.8, legend_text_size = 1.2, ...)
}
\arguments{
\item{plateformat}{An integer which can be one of 96 or 384 or 1536}

\item{plot_data}{A dataframe with three columns such as first column
representing the text characters used to label the y-axis, second column
representing the character used to label the x-axis of platemap, third column
representing the data subtypes.}

\item{legend_txt_bg_col}{Named vector representing the data subtypes as legend
text and colors as their names}

\item{las2}{numeric in {0,1,2,3}; the style of axis labels. for more info,
refer las in \code{help(par)}}

\item{las3}{numeric in {0,1,2,3}; the style of axis labels. for more info
refer las in \code{help(par)}}

\item{cex_axis}{size of text in the axis}

\item{legend_pch}{plotting character or symbol for legend label. for more
info, refer \code{help(pch)}}

\item{symbol_size}{A numeric vector representing the size of symbols plotted
at any coordinates of the plotting region}

\item{legend_text_width}{the width of the legend text in x ("user") coordinates.
(Should be positive even for a reversed x axis.) Defaults to the proper value computed by strwidth(legend).}

\item{legend_ncol}{the number of columns in which to set the legend items (default is 1, a vertical legend).}

\item{legend_posX}{the x co-ordinates to be used to position the legend.}

\item{legend_posY}{the y co-ordinates to be used to position the legend.}

\item{legend_symbol_size}{size of symbols used in the legend label.}

\item{legend_text_size}{size of text used in the legend label.}

\item{...}{Arguments to be passed to methods, such as graphical parameters (see \code{help(par)}).
Many methods will accept the following arguments:}
}
\value{
A figure with a map of the plate with data subtypes color coded as
specified in \code{legend_txt_bg_col}
}
\description{
Generic function for plotting a map of the given data and plateformat.
}
\examples{
legend_txt_bg_col <- c('Empty'                     = 'red',
                       'Pinning Error'             = 'black',
                       'Morethan Plate Median'     = '#660066',
                       'Lessthan Plate Median'     = 'green',
                       'Morethan 90\% Plate Median' = 'cyan',
                       'Lessthan 25\% Plate Median' = 'yellow',
                       'Excluded Colonies'         = 'blue')
data_subtypes_384 <- colonyarea$data_subtypes
across_1536 <- convert_small_to_large(plate_from = 384,
                                      plate_to = 1536,
                                      data_from = data_subtypes_384,
                                      in_data_flow = 'across',
                                      out_data_flow = 'across',
                                      is_plate_coords = TRUE)
across_down_1536 <- convert_small_to_large(plate_from = 384,
                                           plate_to = 1536,
                                           data_from = data_subtypes_384,
                                           in_data_flow = 'across',
                                           out_data_flow = 'down',
                                           is_plate_coords = TRUE)

down_1536 <- convert_small_to_large(plate_from = 384,
                                      plate_to = 1536,
                                      data_from = data_subtypes_384,
                                      in_data_flow = 'down',
                                      out_data_flow = 'down',
                                      is_plate_coords = TRUE)

# 384 plate format
plateformat <- 384
across_384 <- convert_large_to_small(plate_from = 1536,
                                     plate_to = 384,
                                     data_from = across_1536$y,
                                     in_data_flow = 'across',
                                     out_data_flow = 'across',
                                     is_plate_coords = TRUE)

down_384 <- convert_large_to_small(plate_from = 1536,
                                     plate_to = 384,
                                     data_from = down_1536$y,
                                     in_data_flow = 'down',
                                     out_data_flow = 'down',
                                     is_plate_coords = TRUE)

plot_platemap(plateformat = plateformat,
              plot_data = across_384,
              legend_txt_bg_col = legend_txt_bg_col)

plot_platemap(plateformat = plateformat,
              plot_data = down_384,
              legend_txt_bg_col = legend_txt_bg_col)

# 1536 plate format
plateformat <- 1536
plot_platemap(plateformat = plateformat,
              plot_data = across_1536,
              legend_txt_bg_col = legend_txt_bg_col)

plot_platemap(plateformat = plateformat,
              plot_data = across_down_1536,
              legend_txt_bg_col = legend_txt_bg_col)

plot_platemap(plateformat = plateformat,
              plot_data = down_1536,
              legend_txt_bg_col = legend_txt_bg_col)

# 6144 plate format
plateformat <- 6144
across_6144 <- convert_small_to_large(plate_from = 1536,
                                      plate_to = plateformat,
                                      data_from = across_1536[,3],
                                      in_data_flow = 'across',
                                      out_data_flow = 'across',
                                      is_plate_coords = TRUE)

plot_platemap(plateformat = plateformat,
              plot_data = across_6144,
              legend_txt_bg_col = legend_txt_bg_col)

}

